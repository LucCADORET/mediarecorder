{"version":3,"sources":["./src/environments/environment.ts","./src/app/enums/recording-state.enum.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/recording/recording.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export enum RecordingStateEnum {\n    NONE = 'none',\n    RECORDING = 'recording',\n    RECORDED = 'recorded',\n}\n","import { Component } from '@angular/core';\nimport { RecordingStateEnum } from './enums/recording-state.enum';\nimport { RecordingService } from './recording/recording.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'media-recorder';\n  recordingState: RecordingStateEnum;\n\n  constructor(private recordingService: RecordingService) {\n    this.recordingState = RecordingStateEnum.NONE;\n  }\n\n  startRecording() {\n    let displayMediaOptions = {\n      video: true,\n      audio: true\n    };\n    const mediaDevices = navigator.mediaDevices as any; // Workaround for typescript warning\n\n    // Capture the user media\n    mediaDevices.getDisplayMedia(displayMediaOptions).then((ms: MediaStream) => {\n      this.recordingService.startRecording(ms);\n      this.recordingState = RecordingStateEnum.RECORDING;\n    });\n  }\n\n  stopRecording() {\n    this.recordingService.stopRecording();\n    this.recordingState = RecordingStateEnum.RECORDED;\n  }\n\n  download() {\n    this.recordingService.download();\n  }\n}\n","<div class=\"menu\">\n  <div>\n    <span *ngIf=\"recordingState == 'recorded'\">Recorded</span>\n    <span *ngIf=\"recordingState == 'recording'\">Recording...</span>\n  </div>\n  <div class=\"button-section\">\n    <button (click)=\"startRecording()\" [disabled]=\"recordingState == 'recording'\">Start recording</button>\n    <button (click)=\"stopRecording()\" [disabled]=\"recordingState != 'recording'\">Stop recording</button>\n    <button (click)=\"download()\" [disabled]=\"recordingState != 'recorded'\">Download</button>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/// <reference types=\"@types/dom-mediacapture-record\" />\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecordingService {\n\n  private recorder: MediaRecorder;\n  private recordedChunks: any[] = [];\n\n  constructor() {\n    // this.recorder = null;\n  }\n\n  // Starts recording, and returns the MIME type of the recording\n  startRecording(ms: MediaStream) {\n    this.recordedChunks = [];\n    let options = { mimeType: 'video/webm;codecs=vp9' };\n    this.recorder = new MediaRecorder(ms, options);\n    this.recorder.ondataavailable = this.handleDataAvailable.bind(this);\n    this.recorder.start();\n  }\n\n  stopRecording() {\n    this.recorder.stop();\n  }\n\n  download() {\n    var blob = new Blob(this.recordedChunks, {\n      type: 'video/webm'\n    });\n    var url = URL.createObjectURL(blob);\n    var a = document.createElement('a');\n    document.body.appendChild(a);\n    a.href = url;\n    a.download = 'test.webm';\n    a.click();\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * When data is available from the recorder, we give it to the live service that will\n   * Add it to the chunk buffer + torrent seed it\n   * @param event event on data available containing the blob\n   */\n  handleDataAvailable(event: any) {\n    if (event.data.size > 0) {\n      this.recordedChunks.push(event.data);\n    }\n  }\n\n  public blobToFile = (theBlob: Blob, fileName: string): File => {\n    var b: any = theBlob;\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n    return <File>theBlob;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}